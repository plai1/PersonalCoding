Component
  * React applications made out of components
      - component is small,  reusable chunk of code responsible for one job
          + that job is often to render some HTML
      - example:
          import React from 'react';
          import ReactDOM from 'react-dom';

          class MyComponentClass extends React.Component {
            render() {
              return <h1>Hello world</h1>;
            }
          };

          ReactDOM.render(
            <myComponentClass />,
            document.getElementById('app')
          );




Import React
  * "import React from 'react'";
  * code above create new variable ('React') and value is particular, imported JavaScript object
      - imported object contains methods needed to use React
      - objected called the React library
  * use code above to access React library
      - one method from library is 'React.createElement()'
      - when JSX compiled, it transforms into 'React.createElement()' call
  * you have to import React library and save it to a variable ('React') before using any JSX at all




Import ReactDOM
  * "import ReactDOM from 'react-dom'"
  * methods imported from 'react-dom' meant for interacting with DOM
  * methods imported from 'react' doesn't deal with DOM at all
  * clarification:
      - the DOM is used in React applications but isn't part of React
      - DOM is also used in countless non-React applications
      -methods imported from 'react' are only for pure React purposes
        + creating components or writing JSX elements
